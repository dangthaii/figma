generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id                 String    @id @default(uuid())
  name               String?
  username           String    @unique
  password           String
  needChangePassword Boolean   @default(false)
  refreshToken       String?
  role               String? // "admin" or null
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  projects           Project[]
}

model Project {
  id         String   @id @default(uuid())
  name       String
  figmaLink  String
  context    Json?
  ownerId    String
  owner      User     @relation(fields: [ownerId], references: [id])
  chats      Chat[]
  files      ProjectFile[]
  webDemos   WebDemo[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  @@index([ownerId])
}

model Chat {
  id         String   @id @default(uuid())
  projectId  String
  project    Project  @relation(fields: [projectId], references: [id])
  title      String
  messages   Json     // array of message objects; can be large
  webDemos   WebDemo[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  @@index([projectId])
}

model ProjectFile {
  id         String   @id @default(uuid())
  projectId  String
  project    Project  @relation(fields: [projectId], references: [id])
  name       String
  type       String
  url        String?
  content    String?  // optional text content
  metadata   Json?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  @@index([projectId])
}

model WebDemo {
  id          String   @id @default(uuid())
  projectId   String
  project     Project  @relation(fields: [projectId], references: [id])
  chatId      String
  chat        Chat     @relation(fields: [chatId], references: [id])
  name        String
  description String?
  htmlContent String   // HTML content of the demo
  cssContent  String?  // CSS content (optional, can be inline)
  isInlineCSS Boolean  @default(true) // whether CSS is inline or separate
  metadata    Json?    // additional metadata like tags, features, etc.
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  @@index([projectId])
  @@index([chatId])
}

